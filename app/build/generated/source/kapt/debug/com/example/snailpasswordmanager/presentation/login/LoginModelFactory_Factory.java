// Generated by Dagger (https://dagger.dev).
package com.example.snailpasswordmanager.presentation.login;

import com.example.snailpasswordmanager.domain.usecase.user.UserUseCases;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginModelFactory_Factory implements Factory<LoginModelFactory> {
  private final Provider<UserUseCases> logInUseCasesProvider;

  public LoginModelFactory_Factory(Provider<UserUseCases> logInUseCasesProvider) {
    this.logInUseCasesProvider = logInUseCasesProvider;
  }

  @Override
  public LoginModelFactory get() {
    return newInstance(logInUseCasesProvider.get());
  }

  public static LoginModelFactory_Factory create(Provider<UserUseCases> logInUseCasesProvider) {
    return new LoginModelFactory_Factory(logInUseCasesProvider);
  }

  public static LoginModelFactory newInstance(UserUseCases logInUseCases) {
    return new LoginModelFactory(logInUseCases);
  }
}
