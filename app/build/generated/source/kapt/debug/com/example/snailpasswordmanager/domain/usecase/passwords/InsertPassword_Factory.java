// Generated by Dagger (https://dagger.dev).
package com.example.snailpasswordmanager.domain.usecase.passwords;

import com.example.snailpasswordmanager.domain.repository.PasswordListRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InsertPassword_Factory implements Factory<InsertPassword> {
  private final Provider<PasswordListRepository> passwordListRepositoryProvider;

  public InsertPassword_Factory(Provider<PasswordListRepository> passwordListRepositoryProvider) {
    this.passwordListRepositoryProvider = passwordListRepositoryProvider;
  }

  @Override
  public InsertPassword get() {
    return newInstance(passwordListRepositoryProvider.get());
  }

  public static InsertPassword_Factory create(
      Provider<PasswordListRepository> passwordListRepositoryProvider) {
    return new InsertPassword_Factory(passwordListRepositoryProvider);
  }

  public static InsertPassword newInstance(PasswordListRepository passwordListRepository) {
    return new InsertPassword(passwordListRepository);
  }
}
