// Generated by Dagger (https://dagger.dev).
package com.example.snailpasswordmanager.di;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideApplicationFactory implements Factory<Application> {
  private final DataModule module;

  public DataModule_ProvideApplicationFactory(DataModule module) {
    this.module = module;
  }

  @Override
  public Application get() {
    return provideApplication(module);
  }

  public static DataModule_ProvideApplicationFactory create(DataModule module) {
    return new DataModule_ProvideApplicationFactory(module);
  }

  public static Application provideApplication(DataModule instance) {
    return Preconditions.checkNotNull(instance.provideApplication(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
