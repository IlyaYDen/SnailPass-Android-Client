// Generated by Dagger (https://dagger.dev).
package com.example.snailpasswordmanager.presentation.login;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<LoginModelFactory> vmFactoryProvider;

  public LoginActivity_MembersInjector(Provider<LoginModelFactory> vmFactoryProvider) {
    this.vmFactoryProvider = vmFactoryProvider;
  }

  public static MembersInjector<LoginActivity> create(
      Provider<LoginModelFactory> vmFactoryProvider) {
    return new LoginActivity_MembersInjector(vmFactoryProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    injectVmFactory(instance, vmFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.snailpasswordmanager.presentation.login.LoginActivity.vmFactory")
  public static void injectVmFactory(LoginActivity instance, LoginModelFactory vmFactory) {
    instance.vmFactory = vmFactory;
  }
}
