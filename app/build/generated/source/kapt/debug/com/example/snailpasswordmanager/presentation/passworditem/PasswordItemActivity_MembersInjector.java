// Generated by Dagger (https://dagger.dev).
package com.example.snailpasswordmanager.presentation.passworditem;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PasswordItemActivity_MembersInjector implements MembersInjector<PasswordItemActivity> {
  private final Provider<PasswordViewModelFactory> vmFactoryProvider;

  public PasswordItemActivity_MembersInjector(
      Provider<PasswordViewModelFactory> vmFactoryProvider) {
    this.vmFactoryProvider = vmFactoryProvider;
  }

  public static MembersInjector<PasswordItemActivity> create(
      Provider<PasswordViewModelFactory> vmFactoryProvider) {
    return new PasswordItemActivity_MembersInjector(vmFactoryProvider);
  }

  @Override
  public void injectMembers(PasswordItemActivity instance) {
    injectVmFactory(instance, vmFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.snailpasswordmanager.presentation.passworditem.PasswordItemActivity.vmFactory")
  public static void injectVmFactory(PasswordItemActivity instance,
      PasswordViewModelFactory vmFactory) {
    instance.vmFactory = vmFactory;
  }
}
