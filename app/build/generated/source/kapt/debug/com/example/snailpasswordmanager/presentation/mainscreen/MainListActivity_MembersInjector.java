// Generated by Dagger (https://dagger.dev).
package com.example.snailpasswordmanager.presentation.mainscreen;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainListActivity_MembersInjector implements MembersInjector<MainListActivity> {
  private final Provider<MainListViewModelFactory> vmFactoryProvider;

  public MainListActivity_MembersInjector(Provider<MainListViewModelFactory> vmFactoryProvider) {
    this.vmFactoryProvider = vmFactoryProvider;
  }

  public static MembersInjector<MainListActivity> create(
      Provider<MainListViewModelFactory> vmFactoryProvider) {
    return new MainListActivity_MembersInjector(vmFactoryProvider);
  }

  @Override
  public void injectMembers(MainListActivity instance) {
    injectVmFactory(instance, vmFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.snailpasswordmanager.presentation.mainscreen.MainListActivity.vmFactory")
  public static void injectVmFactory(MainListActivity instance,
      MainListViewModelFactory vmFactory) {
    instance.vmFactory = vmFactory;
  }
}
